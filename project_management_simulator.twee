:: StoryTitle
Project Manager Simulator

:: StorySettings
ifid:cf332bda-daec-4957-8b90-6e2f43f9936d

:: Start 

c_team_ineff:       0.95
c_ineff_makeup:     1 - c_team_ineff
c_work_rand_range:  0.05

var_current_scope: 10 + random.d10

var_current_budget:         var_current_scope * 200 + (random.d100 * 10)
var_max_budget:             var_current_budget + (random.d100 * 10)
var_current_deadline:       var_current_scope + random.d5
var_max_deadline:           var_current_deadline + random.d10
var_current_day:            1
var_current_qual:           100
var_cust_happy:             100
var_num_workers:            0
var_team_1_cost_per_day:    200 + random.d50 - random.d25
var_work_complete:          0
var_prev_day_work_complete: 0

var_project_complete:       false

init_has_learned_deadline:       false
init_has_learned_budget:         false
init_has_learned_scope:          false
init_has_discussed_scope_2:      false

ui_title: 'Project Management Simulator'
ui_phase: 'Initiation'
ui_room: 'room-name'

config.header.center: '{ui_room} - {ui_phase}'

--
[align center]
# {ui_title}

Description of simulator

<!--[[SKIP->scene_jump]]-->


[[Start->init_scene_options]]


:: scene_jump
var_num_staff: 1
--
[[execution_scene_hub]]

:: init_scene_options
ui_room: ''
--

_discussing the project_

[unless init_has_learned_budget]
Ask [["Discuss the budget for this project?"->init_scene_learn_budget]]

[unless init_has_learned_deadline]
Ask [["Discuss the deadline for this project?"->init_scene_learn_deadline]]

[unless init_has_learned_scope]
Ask [["Discuss the scope for this project?"->init_scene_disuss_scope]]

[continue]
Say [["I think I've learned what I need to know"->init_scene_try_convince_client]]

[note]
  initial budget = scope * 200 + random(0-1000)
  initial deadline = scope + random(0-5)

:: init_scene_learn_budget
ui_room: ''
init_has_learned_budget:   true
--
Budget is £{var_current_budget}, with a little flexibility if absolutely necessary.

[['Return'->init_scene_options]]

:: init_scene_learn_deadline
init_has_learned_deadline: true
--
Deadline is in {var_current_deadline} days, with a little flexibility if absolutely necessary.

[['Return'->init_scene_options]]

:: init_scene_disuss_scope
ui_room: ''
init_has_learned_scope:   true
temp_extra_scope_amount:  2 + random.d5
temp_scope_extra_budget:  temp_extra_scope_amount * (175 + random.d50)
temp_scope_extra_days:    temp_extra_scope_amount - 2 + random.d4
--

The current scope is {var_current_scope}.

Add extra scope of {temp_extra_scope_amount} for extra £{temp_scope_extra_budget} and {temp_scope_extra_days} days.

> [[Yes->init_scene_add_extra_scope]]
> [[No->init_scene_options]]

:: init_scene_add_extra_scope
ui_room: 'room-name'
var_current_budget:     var_current_budget + temp_scope_extra_budget
var_current_deadline:   var_current_deadline + temp_scope_extra_days
var_current_scope:      var_current_scope + temp_extra_scope_amount
var_max_budget:         var_current_budget + (random.d100 * 10)
--

Added scope added:

[[Return->init_scene_options]]

::init_scene_try_convince_client
ui_room: 'Go/No Discussion'
--

Are you happy to do this project for the available budget and deadline?

> [[Yes->planning_scene_start]]
> [[No->init_scene_convince_no]]

::init_scene_convince_no
ui_room: 'Decide not to do the project'
--
Agree not to do the project
_end_


::planning_scene_start

ui_phase: 'Planning'
ui_room: 'Start of Planning'

--

How many people do you want to join your team for this project?  

[JavaScript]
write("Each person costs £" + var_team_1_cost_per_day.toFixed(0) + " per day.</br></br>");
write("One person can complete approximately 1 room per day</br>");
write("Two people can complete approximately " + (2 * c_team_ineff).toFixed(2)  + " room per day</br>");
write("Three people can complete approximately " + (3 * Math.pow(c_team_ineff, 2)).toFixed(2)  + " room per day</br>");

[continue]

Plan how you will deliver the project based on this cost and productivity.

> [[Hire 1 person->planning_scene_hire_1]]
> [[Hire 2 person->planning_scene_hire_2]]
> [[Hire 3 person->planning_scene_hire_3]]
> [[I can't deliver the project, ask for more time->planning_scene_renegotiate_time]]
> [[I can't deliver the project, ask for more budget->planning_scene_renegotiate_cost]]
> [[Spend 1 project day looking for cheaper staff->planning_scene_try_cheaper_staff]]


::planning_scene_try_cheaper_staff

tmp_is_cheaper: false
tmp_new_random_cost:  200 + random.d25 - random.d25 + 10
tmp_is_cheaper (var_team_1_cost_per_day > tmp_new_random_cost): true
var_team_1_cost_per_day (tmp_is_cheaper): tmp_new_random_cost
var_current_day: var_current_day + 1

--

[if tmp_is_cheaper]
You were able to find cheaper staff, the cost is now {var_team_1_cost_per_day} per day.

[else]
You were not to find cheaper staff, the cost is still {var_team_1_cost_per_day} per day.

[continue]

> [[Return to Planning Decision->planning_scene_start]]


::planning_scene_renegotiate_time

tmp_remaining_days: var_current_deadline - var_current_day
--

You have {tmp_remaining_days} remaining to deliver the project

> [[Ask for 3 more days->planning_scene_reneg_time_3]]
> [[Ask for 6 more days->planning_scene_reneg_time_6]]
> [[Ask for 9 more days->planning_scene_reneg_time_9]]

::planning_scene_reneg_time_3
param_num_days_extra_requested: 3
--
{embed passage: 'planning_scene_reneg_time_results'}

::planning_scene_reneg_time_6
param_num_days_extra_requested: 6
--
{embed passage: 'planning_scene_reneg_time_results'}

::planning_scene_reneg_time_9
param_num_days_extra_requested: 9
--
{embed passage: 'planning_scene_reneg_time_results'}


::planning_scene_reneg_time_results
tmp_requested_time:                                 param_num_days_extra_requested + var_current_deadline
tmp_asked_for_too_much:                             tmp_requested_time > var_max_deadline
var_cust_happy:                                     var_cust_happy - random.d25
var_cust_happy (tmp_asked_for_too_much):            var_cust_happy - random.d25
var_current_deadline (tmp_requested_time <= var_max_deadline):  tmp_requested_time
tmp_remaining_days: var_current_deadline - var_current_day
--

[if tmp_asked_for_too_much]
You have asked for too much time, the client is not happy with you.

[else]
Although the client is not happy to be asked, they allow you these extra days.

[continue]
The deadline is in {tmp_remaining_days} days

> [[Return to Planning Decision->planning_scene_start]]





::planning_scene_renegotiate_cost
--

> [[Ask for £300 more->planning_scene_reneg_cost_3]]
> [[Ask for £600 more->planning_scene_reneg_cost_6]]
> [[Ask for £900 more->planning_scene_reneg_cost_9]]

::planning_scene_reneg_cost_3
param_cost_extra_requested: 300
--
{embed passage: 'planning_scene_reneg_cost_results'}

::planning_scene_reneg_cost_6
param_cost_extra_requested: 600
--
{embed passage: 'planning_scene_reneg_cost_results'}

::planning_scene_reneg_cost_9
param_cost_extra_requested: 900
--
{embed passage: 'planning_scene_reneg_cost_results'}


::planning_scene_reneg_cost_results
tmp_requested_budget:                               param_cost_extra_requested + var_current_budget
tmp_asked_for_too_much:                             tmp_requested_budget > var_max_budget
var_cust_happy:                                     var_cust_happy - random.d25
var_cust_happy (tmp_asked_for_too_much):            var_cust_happy - random.d25
var_current_budget (tmp_requested_budget <= var_max_budget):  tmp_requested_budget
--

[if tmp_asked_for_too_much]
You have asked for too much money, the client is not happy with you.

[else]
Although the client is not happy to be asked, they will give you this extra money to complete the project.

[continue]

> [[Return to Planning Decision->planning_scene_start]]


::planning_scene_hire_1
var_num_staff:  1
--

You have chosen to hire {var_num_staff} person for this project

{embed passage: 'planning_scene_hire_end'}


::planning_scene_hire_2
var_num_staff:  2
--

You have chosen to hire {var_num_staff} people for this project

{embed passage: 'planning_scene_hire_end'}

::planning_scene_hire_3
var_num_staff:  3
--

You have chosen to hire {var_num_staff} people for this project

{embed passage: 'planning_scene_hire_end'}


::planning_scene_hire_end
--

This is the end of the planning phase.

> [[Move to the next day->execution_scene_hub]]

::execution_scene_hub

config.header.center:     '{ui_room} - {ui_phase}: Day {var_current_day}'

var_current_day:          var_current_day + 1

tmp_yesterdays_work_complete:                                        var_work_complete
tmp_work_done_adjuster:                                              (c_work_rand_range ) - (random.fraction * c_work_rand_range * 2)
tmp_work_completed_today:                                            (var_num_staff * c_team_ineff + c_ineff_makeup ) + tmp_work_done_adjuster * var_num_staff

var_work_complete:                                                   var_work_complete + tmp_work_completed_today

var_project_complete (var_work_complete >= var_current_scope):       true      
--

[if var_project_complete]
You have finished the project!

> [[Closure_Phase]]

[else]

[JavaScript]

var rooms_completed = Math.floor(var_work_complete) - Math.floor(tmp_yesterdays_work_complete) 

if (rooms_completed > 1) {
  write(rooms_completed + " rooms were completed")
} else if (rooms_completed > 0) {
  write("A room was completed yesterday")
} else {
  write("No rooms were completed yesterday")
}

[continue]


> [[Move to the next day->execution_scene_hub]]


::Closure_Phase
--
Well done