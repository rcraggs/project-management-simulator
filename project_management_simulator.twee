:: StoryTitle
Project Manager Simulator

:: StorySettings
ifid:cf332bda-daec-4957-8b90-6e2f43f9936d

:: Start 

c_team_ineff:       0.95
c_ineff_makeup:     1 - c_team_ineff
c_work_rand_range:  0.05

var_current_scope: 10 + random.d10

var_staff_update_days:      -1
sys_show_help:              false
var_current_budget:         var_current_scope * 200 + (random.d100 * 10)
var_max_budget:             var_current_budget + (random.d100 * 10)
var_current_deadline:       var_current_scope + random.d5
var_max_deadline:           var_current_deadline + random.d10
var_current_day:            0
var_current_qual:           100
var_cust_happy:             100
var_num_workers:            0
var_team_1_cost_per_day:    200 + random.d25 - random.d10
var_work_complete:          0
var_prev_day_work_complete: 0
var_running_cost:           0


var_project_complete:       false

init_has_learned_deadline:         false
init_has_learned_budget:           false
init_has_learned_scope:            false
init_has_discussed_scope_2:        false
init_has_asked_for_extension_time: false
init_has_asked_for_extension_cost: false
  
ui_title: 'Project Management Simulator'
ui_phase: 'Initiation'
ui_room: 'Intro'

config.header.center:     '{ui_room} - {ui_phase}: Day {var_current_day}'

--
[align center]
# {ui_title}
[continue]

[align center]
Description of simulator
[continue]

> [[Start->init_scene_options]]
> [[Start (with help)->init_scene_options_help]]
> [[Skip->scene_jump]] 

::scene_jump
var_num_staff: 1
--
[[execution_scene_end_of_day]]


::init_scene_options_help
sys_show_help:              true
--
{embed passage: 'init_scene_options'}


::init_scene_options
ui_room: 'Discussing the project with the client'
--

[if sys_show_help]
_Help: Before you agree to manage the project you need to understand the constraints that you will have to work within. These will set the parameters for your planning and monitoring._
[continue]

[unless init_has_learned_budget]
Ask [["Discuss the budget for this project?"->init_scene_learn_budget]]

[unless init_has_learned_deadline]
Ask [["Discuss the deadline for this project?"->init_scene_learn_deadline]]

[unless init_has_learned_scope]
Ask [["Discuss the scope for this project?"->init_scene_disuss_scope]]

[continue]
Say [["I think I've learned what I need to know"->init_scene_try_convince_client]]

[note]
  initial budget = scope * 200 + random(0-1000)
  initial deadline = scope + random(0-5)

:: init_scene_learn_budget
ui_room: ''
init_has_learned_budget:   true
--
Budget is £{var_current_budget}, with a little flexibility if absolutely necessary.

{back link, label: 'Back'}

:: init_scene_learn_deadline
init_has_learned_deadline: true
--
Deadline is in {var_current_deadline} days, with a little flexibility if absolutely necessary.

{back link, label: 'Back'}

:: init_scene_disuss_scope
ui_room: ''
init_has_learned_scope:   true
temp_extra_scope_amount:  2 + random.d5
temp_scope_extra_budget:  temp_extra_scope_amount * (175 + random.d50)
temp_scope_extra_days:    temp_extra_scope_amount - 2 + random.d4
--

The current scope is {var_current_scope}.

Add extra scope of {temp_extra_scope_amount} for extra £{temp_scope_extra_budget} and {temp_scope_extra_days} days.

> [[Yes->init_scene_add_extra_scope]]
> [[No->init_scene_options]]

:: init_scene_add_extra_scope
ui_room: 'room-name'
var_current_budget:     var_current_budget + temp_scope_extra_budget
var_current_deadline:   var_current_deadline + temp_scope_extra_days
var_current_scope:      var_current_scope + temp_extra_scope_amount
var_max_budget:         var_current_budget + (random.d100 * 10)
--

Added scope added:

[[Return->init_scene_options]]

::init_scene_try_convince_client
ui_room: 'Go/No Discussion'
--

Are you happy to do this project for the available budget and deadline?

> [[Yes->planning_scene_start]]
> [[No->init_scene_convince_no]]

::init_scene_convince_no
ui_room: 'Decide not to do the project'
--

[if sys_show_help]
_Help: it's common for a project to not be feasible. In these cases it's better to avoid doing the project than wasting everyone's time trying. As long as you're sure you couldn't complete the project in the given constraints, you have made the right decision.
[continue]

Agree not to do the project
_end_

<!-- 
*******************************
Planning Phase
*******************************
-->


::planning_scene_start

ui_phase: 'Planning'
ui_room: 'Start of Planning'


tmp_show_hire_only:       init_has_asked_for_extension_time && init_has_asked_for_extension_cost
tmp_show_extra_time_only: !init_has_asked_for_extension_time && init_has_asked_for_extension_cost
tmp_show_extra_cost_only: init_has_asked_for_extension_time && !init_has_asked_for_extension_cost
tmp_show_all:             !init_has_asked_for_extension_time && !init_has_asked_for_extension_cost
--

How many people do you want to join your team for this project?  

[JavaScript]
write("Each person costs £" + var_team_1_cost_per_day.toFixed(0) + " per day.</br></br>");
write("One person can complete approximately 1 room per day</br>");
write("Two people can complete approximately " + (2 * c_team_ineff).toFixed(2)  + " room per day</br>");
write("Three people can complete approximately " + (3 * Math.pow(c_team_ineff, 2)).toFixed(2)  + " room per day</br>");

[continue]

[if sys_show_help]
_Help: In this simple simulation the amount of work that can be completed does not increase steadily for increasing number of workers. This is to simulate the fact that dependencies make it hard to schedule tasks to that everyone is busy at the same time._
[continue]

[if tmp_show_all]
> [[Hire staff for the project->planning_scene_hire_staff_choice]]
> [[Spend 1 project day looking for cheaper staff->planning_scene_try_cheaper_staff]]
> [[I can't deliver the project, ask for more time->planning_scene_renegotiate_time]]
> [[I can't deliver the project, ask for more budget->planning_scene_renegotiate_cost]]

[if tmp_show_hire_only]
> [[Hire staff for the project->planning_scene_hire_staff_choice]]
> [[Spend 1 project day looking for cheaper staff->planning_scene_try_cheaper_staff]]

[if tmp_show_extra_time_only]
> [[Hire staff for the project->planning_scene_hire_staff_choice]]
> [[Spend 1 project day looking for cheaper staff->planning_scene_try_cheaper_staff]]
> [[I can't deliver the project, ask for more time->planning_scene_renegotiate_time]]

[if tmp_show_extra_cost_only]
> [[Hire staff for the project->planning_scene_hire_staff_choice]]
> [[Spend 1 project day looking for cheaper staff->planning_scene_try_cheaper_staff]]
> [[I can't deliver the project, ask for more budget->planning_scene_renegotiate_cost]]


::planning_scene_hire_staff_choice
--

Hire {dropdown menu for: 'var_num_staff_text', choices: ['1', '2', '3']} staff

> [[Hire that many staff->planning_scene_complete_hire]]
> {back link, label: 'Back'}


::planning_scene_complete_hire
var_num_staff (var_num_staff_text == '1'): 1
var_num_staff (var_num_staff_text == '2'): 2
var_num_staff (var_num_staff_text == '3'): 3
--

You hired {var_num_staff} staff.

[if sys_show_help]
_Help: By the end of the planning phase you should know how much work needs to be completed on each day of the project, and how many people you will need each day to complete it._
[continue]

You have completed the planning phase, click below to complete the first day of the execution phase

[[Move to the end of the next day->execution_scene_end_of_day]]


::planning_scene_try_cheaper_staff

tmp_is_cheaper: false
tmp_new_random_cost:  200 + random.d25 - random.d25 + 10
tmp_is_cheaper (var_team_1_cost_per_day > tmp_new_random_cost): true
var_team_1_cost_per_day (tmp_is_cheaper): tmp_new_random_cost
var_current_day: var_current_day + 1
--

[if tmp_is_cheaper]
You were able to find cheaper staff, the cost is now {var_team_1_cost_per_day} per day.

[else]
You were not to find cheaper staff, the cost is still {var_team_1_cost_per_day} per day.

[continue]

> [[Return to Planning Decision->planning_scene_start]]


::planning_scene_renegotiate_time

tmp_remaining_days: var_current_deadline - var_current_day
--

You have {tmp_remaining_days} remaining to deliver the project

Number of extra days to ask for: {dropdown menu for: 'tmp_num_extra_days', choices: ['3', '6', '9']}

> [[Request more days->planning_scene_request_days]]
> {back link, label: 'Back'}

::planning_scene_request_days
init_has_asked_for_extension_time: true
param_num_days_extra_requested (tmp_num_extra_days == '3'): 3
param_num_days_extra_requested (tmp_num_extra_days == '6'): 6
param_num_days_extra_requested (tmp_num_extra_days == '9'): 9
--

{embed passage: 'planning_scene_reneg_time_results'}

::planning_scene_reneg_time_results
tmp_requested_time:                                 param_num_days_extra_requested + var_current_deadline
tmp_asked_for_too_much:                             tmp_requested_time > var_max_deadline
var_cust_happy:                                     var_cust_happy - random.d25
var_cust_happy (tmp_asked_for_too_much):            var_cust_happy - random.d25
var_current_deadline (tmp_requested_time <= var_max_deadline):  tmp_requested_time
tmp_remaining_days: var_current_deadline - var_current_day
--

[if tmp_asked_for_too_much]
You have asked for too much time, the client is not happy with you.

[else]
Although the client is not happy to be asked, they allow you these extra days.

[continue]
The deadline is in {tmp_remaining_days} days

> [[Return to Planning Decision->planning_scene_start]]


::planning_scene_renegotiate_cost
--

Amount of extra money to request : {dropdown menu for: 'tmp_num_extra_money', choices: ['£300', '£600', '£900']}

> [[Request a higher budget->planning_scene_request_money]]
> {back link, label: 'Back'}


::planning_scene_request_money
init_has_asked_for_extension_cost: true
param_cost_extra_requested (tmp_num_extra_money == '£300'): 300
param_cost_extra_requested (tmp_num_extra_money == '£600'): 600
param_cost_extra_requested (tmp_num_extra_money == '£900'): 900
--

{embed passage: 'planning_scene_reneg_cost_results'}

::planning_scene_reneg_cost_results
tmp_requested_budget:                               param_cost_extra_requested + var_current_budget
tmp_asked_for_too_much:                             tmp_requested_budget > var_max_budget
var_cust_happy:                                     var_cust_happy - random.d25
var_cust_happy (tmp_asked_for_too_much):            var_cust_happy - random.d25
var_current_budget (tmp_requested_budget <= var_max_budget):  tmp_requested_budget
--

[if tmp_asked_for_too_much]
You have asked for too much money, the client is not happy with you.

[else]
Although the client is not happy to be asked, they will give you this extra money to complete the project.

[continue]

> [[Return to Planning Decision->planning_scene_start]]


<!-- 
*******************************
Execution Loop
*******************************
-->


::execution_scene_pm_options
ui_room:                'Project Management Opportunities'
tmp_event_rand_value:   random.d25

tmp_event (tmp_event_rand_value < 10):                               'no_event'
tmp_event (tmp_event_rand_value >= 10 && tmp_event_rand_value < 15): 'event_1'
tmp_event (tmp_event_rand_value >= 15 && tmp_event_rand_value < 20): 'event_2'
tmp_event (tmp_event_rand_value >= 20 && tmp_event_rand_value < 25): 'event_3' 
var_staff_update_days (var_staff_update_days >= 0): var_staff_update_days - 1
var_num_staff (var_staff_update_days == 0):         var_next_num_staff
--

# Project Management Options

You currently have {var_num_staff} worker(s) on the project.

[if var_staff_update_days > 0 && var_next_num_staff != var_num_staff]
The number of staff will change to {var_next_num_staff} in {var_staff_update_days} day(s).
[continue]

> [[Change the number of staff->execution_scene_change_staff]]
> [[Ask for more time->execution_scene_ask_time]]
> [[Ask for more cost->execution_scene_ask_cost]]
> [[No Action Required->execution_scene_test_event_{tmp_event}]]

<!--
*************************
Execution PM Actions
*************************
-->

::execution_scene_change_staff
--
Hire {dropdown menu for: 'var_num_staff_text', choices: ['1', '2', '3']} staff

> [[Hire that many staff->execution_scene_complete_hire]]
> {back link, label: 'Back'}

::execution_scene_complete_hire
var_next_num_staff (var_num_staff_text == '1'): 1
var_next_num_staff (var_num_staff_text == '2'): 2
var_next_num_staff (var_num_staff_text == '3'): 3
var_staff_update_days:                          2
--

You have chosen to work with {var_next_num_staff} staff. This change will happen in {var_staff_update_days} days.

[[Move to the end of the next day->execution_scene_end_of_day]]

<!--
*************************
Execution Events
*************************
-->

::execution_scene_test_event_no_event
--
# No Event
[[End of the day->execution_scene_end_of_day]]

::execution_scene_test_event_event_1
--
# Event 1
[[End of the day->execution_scene_end_of_day]]

::execution_scene_test_event_event_2
--
# Event 2
[[End of the day->execution_scene_end_of_day]]

::execution_scene_test_event_event_3
--
# Event 3
[[End of the day->execution_scene_end_of_day]]



::execution_scene_end_of_day

tmp_yesterdays_work_complete:    var_work_complete
tmp_work_done_adjuster:          (c_work_rand_range ) - (random.fraction * c_work_rand_range * 2)
tmp_work_completed_today:        (var_num_staff * c_team_ineff + c_ineff_makeup ) + tmp_work_done_adjuster * var_num_staff

var_work_complete:               var_work_complete + tmp_work_completed_today
var_running_cost:                var_running_cost + var_team_1_cost_per_day * var_num_staff

var_project_complete (var_work_complete >= var_current_scope):       true

var_current_day:                 var_current_day + 1
tmp_past_deadline:               false
tmp_past_deadline (var_current_deadline < var_current_day):          true
--

# Project Update: Day {var_current_day}

[if tmp_past_deadline]
The deadline has passed

> [[closure_scene]]

[if var_project_complete]
You have finished the project!

> [[closure_scene]]

[else]

Room(s) completed today: 

[JavaScript; append]
write(Math.floor(var_work_complete) - Math.floor(tmp_yesterdays_work_complete))

[continue]

> [[Start Next Day->execution_scene_pm_options]]

<!-- 
*******************************
Closure Phase
*******************************
-->

::closure_scene
--

Client Happiness: {var_cust_happy}%

[JavaScript]
write("Proportion of the rooms completed: " + Math.floor(var_work_complete) + " out of " + var_current_scope)
[continue]

The project cost: £{var_running_cost}