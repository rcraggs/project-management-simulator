
:: StoryData
{
  "ifid": "cf332bda-daec-4957-8b90-6e2f43f9936d"
}

:: StoryTitle
Project Manager Simulator

:: Start 
c_game_version:        "dev"
c_team_ineff:          0.7
c_ineff_makeup:        1 - c_team_ineff
c_work_rand_range:     0.1
c_change_during_exec_happy_cost: 10
c_base_rooms_per_day:  0.5
c_basic_cost_per_room: 235
c_basic_days_per_room: 2

var_current_scope: 10 + random.d10

var_event_1_happened:  false
var_event_2_happened:  false
var_event_3_happened:  false
var_event_4_happened:  false
tmp_event_1_happening: false
tmp_notification_message: "This is the end of your first day on the project"

var_workers_update_days:      -1
sys_show_help:              false
var_current_budget:         var_current_scope * 200 + (random.d20 - random.d20)
var_max_budget:             var_current_budget + (random.d100 * 10)
var_current_deadline:       var_current_scope + random.d5
var_max_deadline:           var_current_deadline + random.d10
var_current_day:            0
var_cust_happy:             100
var_num_workers:            0
var_team_1_cost_per_day:    80 + random.d10 - random.d10
var_work_complete:          0
var_prev_day_work_complete: 0
var_running_cost:           0

var_project_complete:       false

init_has_learned_deadline:         false
init_has_learned_budget:           false
init_has_learned_scope:            false
init_has_discussed_scope_2:        false
init_has_asked_for_extension_time: false
init_has_asked_for_extension_cost: false
  
ui_title: 'Project Management Simulator'
ui_phase: 'Initiation'
ui_room: 'Intro'

config.header.center:     '<b>Phase:</b> {ui_phase} - <b>Scene:</b> {ui_room} - <b>Day</b> {var_current_day}'
config.footer.center:     'Version: {c_game_version}'

--
[align center]
# {ui_title}
[continue]

[align center]
Practice the skills from the first 5 weeks of CO2201 in a decorating project simulator!

_You manage a team of painters and decorators. You're job is to plan and manage a project to decorate a house for a client and keep the clients happy._

Report any bugs in our [Gitlab Issue Tracker](https://campus.cs.le.ac.uk/gitlab/rc340/project-management-simulator/issues)

[continue]

> [[Start->init_scene_options]]
> [[Start (with help)->init_scene_options_help]]

::scene_jump
var_num_workers: 1
tmp_notification_message: "You Jumped here by magic"
--
[[execution_scene_end_of_day]]

::init_scene_options_help
sys_show_help:              true
--
{embed passage: 'init_scene_options'}

::init_scene_options
ui_room: 'Discussing the project with the client'
--

[if sys_show_help]
<span style="color:blue;"> _**Help**: Before you agree to manage a project you need to understand the constraints that you will have to work within. These will set the parameters for your planning and monitoring._</span>
[continue]

[unless init_has_learned_budget]
Ask [["Discuss the budget for this project?"->init_scene_learn_budget]]

[unless init_has_learned_deadline]
Ask [["Discuss the deadline for this project?"->init_scene_learn_deadline]]

[unless init_has_learned_scope]
Ask [["Discuss the scope for this project?"->init_scene_disuss_scope]]

[continue]
Say [["I think I've learned what I need to know"->init_scene_try_convince_client]]

[note]
  initial budget = scope * 200 + random(0-1000)
  initial deadline = scope + random(0-5)

:: init_scene_learn_budget
ui_room: 'Speaking to client about the budget'
init_has_learned_budget:   true
--

[if sys_show_help]
<span style="color:blue;"> _**Help**: The budget is how much money is available to complete the project. In this project, like most projects, most of the cost is paying for workers' time._</span>
[continue]

Budget is £{var_current_budget}, with a little flexibility if absolutely necessary.

{back link, label: 'Back'}

:: init_scene_learn_deadline
ui_room: 'Speaking to client about the deadline'
init_has_learned_deadline: true
--

[if sys_show_help]
<span style="color:blue;"> _**Help**: You will get to use the "little flexibility" later in the game._</span>
[continue]

You must complete the project within {var_current_deadline} days, with a little flexibility if absolutely necessary.

{back link, label: 'Back'}

:: init_scene_disuss_scope
ui_room: 'Speaking to client about the project scope'
init_has_learned_scope:   true
temp_extra_scope_amount:  2 + random.d5
temp_scope_extra_budget:  temp_extra_scope_amount * (175 + random.d50)
temp_scope_extra_days:    temp_extra_scope_amount - 2 + random.d4
--

[if sys_show_help]
<span style="color:blue;"> _**Help**: Scope is the amount of work for a project. In this project, it's the number of rooms you must decorate._</span>
[continue]

You must decorate {var_current_scope} rooms.

We have another {temp_extra_scope_amount} rooms that you can choose to decorate for an extra £{temp_scope_extra_budget} and {temp_scope_extra_days} days. Do you want to add this scope to the project?

> [[Yes->init_scene_add_extra_scope]]
> [[No->init_scene_options]]

:: init_scene_add_extra_scope
ui_room: 'Adding extra scope'
var_current_budget:     var_current_budget + temp_scope_extra_budget
var_current_deadline:   var_current_deadline + temp_scope_extra_days
var_current_scope:      var_current_scope + temp_extra_scope_amount
var_max_budget:         var_current_budget + (random.d100 * 10)
--

[if sys_show_help]
<span style="color:blue;"> _**Help**: as a project manager you must keep track of the constraints._</span>
[continue]

You have chosen to add these extra rooms to the project scope.

[[Return->init_scene_options]]

::init_scene_try_convince_client
ui_room: 'Go/No Discussion'
--

[if sys_show_help]
<span style="color:blue;"> _**Help**: An outcome of the initiation phase is a decision on whether to go ahead with the project._</span>
[continue]

Based on the constraints you have agreed, do you think you can complete the project. A worker costs approximately £80 per day and can complete approximately {c_base_rooms_per_day} rooms per day.

Are you confident that this project can be successfully completed within the constraints?

> [[Yes->planning_scene_start]]
> [[No->init_scene_convince_no]]

::init_scene_convince_no
ui_room: 'Decide not to do the project'
--

[if sys_show_help]
<span style="color:blue;"> _**Help**: _Help: It's common for a project to not be feasible. In these cases it's better to avoid doing the project than wasting everyone's time trying. As long as you're sure you couldn't complete the project in the given constraints, you have made the right decision._</span>
[continue]

You decided not to do the project. 

_end_

<!-- 
*******************************
Planning Phase
*******************************
-->


::planning_scene_start
ui_phase: 'Planning'
ui_room: 'Start of Planning'

tmp_show_hire_only:       init_has_asked_for_extension_time && init_has_asked_for_extension_cost
tmp_show_extra_time_only: !init_has_asked_for_extension_time && init_has_asked_for_extension_cost
tmp_show_extra_cost_only: init_has_asked_for_extension_time && !init_has_asked_for_extension_cost
tmp_show_all:             !init_has_asked_for_extension_time && !init_has_asked_for_extension_cost
--

[if sys_show_help]
<span style="color:blue;"> _**Help**: You are at the resourcing part of the project planning phase. To make decisions about resources you must have a plan for what work needs to be completed when. Do you have a plan for this?_</span>
[continue]

How many people do you want to join your team for this project?  

[JavaScript]
write("Each person costs £" + var_team_1_cost_per_day.toFixed(0) + " per day.</br></br>");
write("One person can complete approximately " + c_base_rooms_per_day + " room per day</br>");
write("Two people can complete approximately " + (2 * c_team_ineff * c_base_rooms_per_day).toFixed(2)  + " room per day</br>");
write("Three people can complete approximately " + (3 * Math.pow(c_team_ineff, 2)).toFixed(2)  + " room per day</br>");

[continue]

[if sys_show_help]
<span style="color:green;"> _**Help**: In this simple simulation the amount of work that can be completed does not increase steadily for increasing number of workers. This is to simulate the fact that dependencies make it hard to schedule tasks to that everyone is busy at the same time._</span>
[continue]

[if tmp_show_all]
> [[Hire workers for the project->planning_scene_hire_workers_choice]]
> [[Spend 1 project day looking for cheaper workers->planning_scene_try_cheaper_workers]]
> [[I can't deliver the project, ask for more time->planning_scene_renegotiate_time]]
> [[I can't deliver the project, ask for more budget->planning_scene_renegotiate_cost]]

[if tmp_show_hire_only]
> [[Hire workers for the project->planning_scene_hire_workers_choice]]
> [[Spend 1 project day looking for cheaper workers->planning_scene_try_cheaper_workers]]

[if tmp_show_extra_time_only]
> [[Hire workers for the project->planning_scene_hire_workers_choice]]
> [[Spend 1 project day looking for cheaper workers->planning_scene_try_cheaper_workers]]
> [[I can't deliver the project, ask for more time->planning_scene_renegotiate_time]]

[if tmp_show_extra_cost_only]
> [[Hire workers for the project->planning_scene_hire_workers_choice]]
> [[Spend 1 project day looking for cheaper workers->planning_scene_try_cheaper_workers]]
> [[I can't deliver the project, ask for more budget->planning_scene_renegotiate_cost]]


::planning_scene_hire_workers_choice
ui_room: 'Choose the number of workers'
--

[if sys_show_help]
<span style="color:blue;"> _**Help**: You can change the number of workers at intervals throughout the project._</span>
[continue]

Hire {dropdown menu for: 'var_num_workers_text', choices: ['1', '2', '3']} workers

> [[Hire that many workers->planning_scene_complete_hire]]
> {back link, label: 'Back'}


::planning_scene_complete_hire
var_num_workers (var_num_workers_text == '1'): 1
var_num_workers (var_num_workers_text == '2'): 2
var_num_workers (var_num_workers_text == '3'): 3
--

You hired {var_num_workers} workers.

[if sys_show_help]
<span style="color:blue;">_Help: By the end of the planning phase you should know how much work needs to be completed on each day of the project, and how many people you will need each day to complete it._</span>
[continue]

You have completed the planning phase, click below to complete the first day of the execution phase

[[Start Next Day->execution_scene_end_of_day]]

::planning_scene_try_cheaper_workers
ui_room: 'Looking for cheaper workers'
tmp_is_cheaper: false
tmp_new_random_cost:  78 + random.d10 - random.d10
tmp_is_cheaper (var_team_1_cost_per_day > tmp_new_random_cost): true
var_team_1_cost_per_day (tmp_is_cheaper): tmp_new_random_cost
var_current_day: var_current_day + 1
--

[if tmp_is_cheaper]
You were able to find cheaper workers, the cost is now £{var_team_1_cost_per_day} per day.

[else]
You were not to find cheaper workers, the cost is still £{var_team_1_cost_per_day} per day.

[continue]

> [[Return to Planning Decision->planning_scene_start]]


::planning_scene_renegotiate_time
ui_room: 'Ask for more time'
tmp_remaining_days: var_current_deadline - var_current_day
--

[if sys_show_help]
<span style="color:blue;"> _**Help**: On projects there may be extra time or money available if necessary. Clients are usually not happy to give more time or money for the same scope._</span>
[continue]

You have {tmp_remaining_days} remaining to deliver the project

Number of extra days to ask for: {dropdown menu for: 'tmp_num_extra_days', choices: ['3', '6', '9']}

> [[Request more days->planning_scene_request_days]]
> {back link, label: 'Back'}

::planning_scene_request_days
init_has_asked_for_extension_time: true
param_num_days_extra_requested (tmp_num_extra_days == '3'): 3
param_num_days_extra_requested (tmp_num_extra_days == '6'): 6
param_num_days_extra_requested (tmp_num_extra_days == '9'): 9
--

{embed passage: 'planning_scene_reneg_time_results'}

::planning_scene_reneg_time_results
tmp_requested_time:                                 param_num_days_extra_requested + var_current_deadline
tmp_asked_for_too_much:                             tmp_requested_time > var_max_deadline
var_cust_happy:                                     var_cust_happy - (10 + random.d12)
var_cust_happy (tmp_asked_for_too_much):            var_cust_happy - (10 + random.d12)
var_current_deadline (tmp_requested_time <= var_max_deadline):  tmp_requested_time
tmp_remaining_days: var_current_deadline - var_current_day
--

[if tmp_asked_for_too_much]
You have asked for too much time, the client is not happy with you.

[else]
Although the client is not happy to be asked, they allow you these extra days.

[continue]
The deadline is in {tmp_remaining_days} days

> [[Return to Planning Decision->planning_scene_start]]


::planning_scene_renegotiate_cost
ui_room: 'Ask for more money'
--

[if sys_show_help]
<span style="color:blue;"> _**Help**: On projects there may be extra time or money available if necessary. Clients are usually not happy to give more time or money for the same scope._</span>
[continue]

Amount of extra money to request : {dropdown menu for: 'tmp_num_extra_money', choices: ['£300', '£600', '£900']}

> [[Request a higher budget->planning_scene_request_money]]
> {back link, label: 'Back'}


::planning_scene_request_money
init_has_asked_for_extension_cost: true
param_cost_extra_requested (tmp_num_extra_money == '£300'): 300
param_cost_extra_requested (tmp_num_extra_money == '£600'): 600
param_cost_extra_requested (tmp_num_extra_money == '£900'): 900
--

{embed passage: 'planning_scene_reneg_cost_results'}

::planning_scene_reneg_cost_results
tmp_requested_budget:                               param_cost_extra_requested + var_current_budget
tmp_asked_for_too_much:                             tmp_requested_budget > var_max_budget
var_cust_happy:                                     var_cust_happy - random.d25
var_cust_happy (tmp_asked_for_too_much):            var_cust_happy - random.d25
var_current_budget (tmp_requested_budget <= var_max_budget):  tmp_requested_budget
--

[if tmp_asked_for_too_much]
You have asked for too much money, the client is not happy with you.

[else]
Although the client is not happy to be asked, they will give you this extra money to complete the project.

[continue]

> [[Return to Planning Decision->planning_scene_start]]

<!-- 
*******************************
Execution Loop
*******************************
-->

::execution_scene_change_workers
ui_phase: 'Execution'
ui_room: 'Change number of workers'
--

[if sys_show_help]
<span style="color:blue;"> _**Help**: In this project changing the number of workers is the same as re-scheduling_</span>
[continue]

Hire {dropdown menu for: 'var_num_workers_text', choices: ['1', '2', '3']} workers. This will not take effect immediately.

> [[Hire workers->execution_scene_complete_hire]]
> {back link, label: 'Back'}

::execution_scene_complete_hire
var_next_num_workers (var_num_workers_text == '1'): 1
var_next_num_workers (var_num_workers_text == '2'): 2
var_next_num_workers (var_num_workers_text == '3'): 3
var_workers_update_days:                            2
--

You have chosen to use {var_next_num_workers} workers. This change will happen in {var_workers_update_days} days.

[[Start Next Day->execution_scene_test_event_no_event]]


::execution_scene_ask_time
ui_room: 'Talk to client'
--

[if sys_show_help]
<span style="color:blue;"> _**Help**: It is common to ask for more time or money during a project._</span>
[continue]

Number of extra days to ask for: {dropdown menu for: 'tmp_num_extra_days', choices: ['3', '6', '9']}

> [[Request more days->exeuction_scene_request_days]]
> {back link, label: 'Back'}

::exeuction_scene_request_days
param_num_days_extra_requested (tmp_num_extra_days == '3'): 3
param_num_days_extra_requested (tmp_num_extra_days == '6'): 6
param_num_days_extra_requested (tmp_num_extra_days == '9'): 9
--

{embed passage: 'execution_scene_reneg_time_results'}

::execution_scene_reneg_time_results
tmp_requested_time:                                 param_num_days_extra_requested + var_current_deadline
tmp_asked_for_too_much:                             tmp_requested_time > var_max_deadline
var_cust_happy:                                     var_cust_happy - (random.d25 + c_change_during_exec_happy_cost)
var_cust_happy (tmp_asked_for_too_much):            var_cust_happy - random.d25
var_current_deadline (tmp_requested_time <= var_max_deadline):  tmp_requested_time
tmp_remaining_days: var_current_deadline - var_current_day
--

[if tmp_asked_for_too_much]
You have asked for too much time, the client is not happy with you.

[else]
Although the client is not happy to be asked, they allow you these extra days.
[continue]

> [[Continue Project->execution_scene_test_event_no_event]]

::execution_scene_ask_cost
ui_room: 'Talk to client'
--

[if sys_show_help]
<span style="color:blue;"> _**Help**: It is common to ask for more time or money during a project._</span>
[continue]

Amount of extra money to request : {dropdown menu for: 'tmp_num_extra_money', choices: ['£300', '£600', '£900']}

> [[Request a higher budget->execution_scene_request_money]]
> {back link, label: 'Back'}


::execution_scene_request_money
param_cost_extra_requested (tmp_num_extra_money == '£300'): 300
param_cost_extra_requested (tmp_num_extra_money == '£600'): 600
param_cost_extra_requested (tmp_num_extra_money == '£900'): 900
--

{embed passage: 'execution_scene_reneg_cost_results'}

::execution_scene_reneg_cost_results
tmp_requested_budget:                               param_cost_extra_requested + var_current_budget
tmp_asked_for_too_much:                             tmp_requested_budget > var_max_budget
var_cust_happy:                                     var_cust_happy - (random.d25 + c_change_during_exec_happy_cost)
var_cust_happy (tmp_asked_for_too_much):            var_cust_happy - random.d25
var_current_budget (tmp_requested_budget <= var_max_budget):  tmp_requested_budget
--

[if tmp_asked_for_too_much]
You have asked for too much money, the client is not happy with you.

[else]
Although the client is not happy to be asked, they will give you this extra money to complete the project.

[continue]

> [[Continue Project->execution_scene_test_event_no_event]]

<!--
*************************
Execution Events
*************************

*************************
Event 1 = workers member ill for the day
Event 2 = Cust change mind - re-do x rooms
Event 3 = Can spend to make cust more happy
Event 4 = Cheap paint at the risk of unhappy customer
*************************

-->

::execution_scene_test_event_no_event
tmp_notification_message: "Nothing interesting happened today"
--
{embed passage: 'execution_scene_end_of_day'}

::execution_scene_test_event_event_1
ui_room: 'Project event'
var_event_1_happened:       true
tmp_event_1_happening:      true
tmp_notification_message:   "Scope increase by 2"
--
# Project Notification!

A worker was hung-over today. Not only did they not complete any useful work, they made a mess of 2 rooms. They will need to be done again. The scope increases by 2. You refuse to pay the worker a day's wage.

[[End of the day->execution_scene_end_of_day]]

::execution_scene_test_event_event_2
ui_room: 'Project event'
tmp_num_rooms_redo: random.d4
tmp_additional_budget_for_redo: c_basic_cost_per_room * tmp_num_rooms_redo
tmp_additional_days_for_redo:   c_basic_days_per_room * tmp_num_rooms_redo

var_current_budget:             var_current_budget + tmp_additional_budget_for_redo    
var_max_budget:                 var_max_budget + tmp_additional_budget_for_redo
var_current_deadline:           var_current_deadline + tmp_additional_days_for_redo
var_max_deadline:               var_max_deadline + tmp_additional_days_for_redo
var_event_2_happened:           true
tmp_notification_message:       "You now have a bigger budget and a longer deadline, but more work to do."
--
# Project Notification!

[if sys_show_help]
<span style="color:blue;"> _**Help**: Client's often change their mind when they see some completed work. In a plan-driven project like this, we must adjust the constraints when this happens._</span>
[continue]

The client called. They've changed their mind about the colour of {tmp_num_rooms_redo} of the rooms. They would like you to re-do these rooms. 

[JavaScript]
write("They will give you another £" + Math.floor(tmp_additional_budget_for_redo) + " and another " + Math.floor(tmp_additional_days_for_redo) + " days to complete the project")
[continue]


[[End of the day->execution_scene_end_of_day]]

::execution_scene_test_event_event_3
ui_room: 'Project event'
--

[if sys_show_help]
<span style="color:blue;"> _**Help**: Remember that costs include workers and other direct costs._</span>
[continue]

# Project Notification

One of your workers finds a nice picture that will make the room look great. It will make your client happier although it will cost you £200. Do you want to buy it?

> [[Yes->exec_scene_buy_picture]]
> [[No->exec_scene_no_picture]]

::exec_scene_buy_picture
tmp_notification_message: "You buy the picture and hang it up. The client will be thrilled"
var_running_cost:         var_running_cost + 200
var_cust_happy:           100
--
{embed passage: 'execution_scene_end_of_day'}

::exec_scene_no_picture
tmp_notification_message: "You decide not to buy the picture"
--
{embed passage: 'execution_scene_end_of_day'}

::execution_scene_test_event_event_4
ui_room: 'Project event'
var_event_4_happened:       true
tmp_event_4_happening:      true
tmp_notification_message:   "You continue using the usual paint"
--
# Project Notification!

One of your workers has been offered some cheaper paint. If you choose to use this it will save you £200. However there's a slim but real chance that the customer will notice and be upset. 

> [[Use the cheaper paint->execution_scene_event_4_cheaper_paint]]
> [[Continue using the normal paint->execution_scene_end_of_day]]

::execution_scene_event_4_cheaper_paint
tmp_bad_paint_client_unhappy:                 false
tmp_bad_paint_client_unhappy(random.d5==1):   true
tmp_notification_message:                     "The cheaper paint was a success"
tmp_notification_message(tmp_bad_paint_client_unhappy):   "You tried the cheaper paint but regret it now"

var_current_scope(tmp_bad_paint_client_unhappy):          var_current_scope + 2
--

[if sys_show_help]
<span style="color:blue;"> _**Help**: If you have to repaint a room, that means your scope increases by 1.</span>
[continue]

[if tmp_bad_paint_client_unhappy]
**Bad News**: The client noticed the weaker colour from the cheaper paint. You have to re-paint 1 of the rooms and the client is less happy.
[else]
**Good News**: The cheaper paint seems ok. The client hasn't noticed the difference.
[continue]


::execution_scene_end_of_day
ui_room:                'End of Day report and options'
tmp_event_rand_value:   random.d12

tmp_event (tmp_event_rand_value > 3): 'no_event'
tmp_event (tmp_event_rand_value == 1): 'event_1'
tmp_event (tmp_event_rand_value == 2): 'event_2'
tmp_event (tmp_event_rand_value == 3): 'event_3'
tmp_event (tmp_event_rand_value == 4): 'event_4' 
var_workers_update_days (var_workers_update_days >= 0): var_workers_update_days - 1
var_num_workers (var_workers_update_days == 0):         var_next_num_workers

tmp_missing_workers:                          0
tmp_missing_workers (tmp_event_1_happening):  1

tmp_yesterdays_work_complete:    var_work_complete
tmp_work_done_adjuster:          (c_work_rand_range ) - (random.fraction * c_work_rand_range * 2)
tmp_work_completed_today:        ((var_num_workers-tmp_missing_workers) * c_base_rooms_per_day * c_team_ineff + c_ineff_makeup ) + tmp_work_done_adjuster * var_num_workers

var_work_complete:               var_work_complete + tmp_work_completed_today
var_work_complete (tmp_event_1_happening): var_work_complete - 2
var_running_cost:                var_running_cost + var_team_1_cost_per_day * var_num_workers
var_running_cost (tmp_event_1_happening): var_running_cost - var_team_1_cost_per_day

var_project_complete (var_work_complete >= var_current_scope):       true

var_current_day:                 var_current_day + 1
tmp_past_deadline:               false
tmp_past_deadline (var_current_deadline < var_current_day):          true
tmp_will_continue:               !tmp_past_deadline && !var_project_complete

tmp_event_1_happening: false
--

<span style="color:darkred;">_{tmp_notification_message}_</span>

# End of day report: day {var_current_day}

[if sys_show_help]
<span style="color:blue;"> _**Help**: this only reports completed rooms. There will be rooms that are partly complete that will be finished off tomorrow._</span>
[continue]

[if tmp_past_deadline]
The deadline has passed

> [[closure_scene]]

[if var_project_complete]
You have finished the project!

> [[closure_scene]]

[if tmp_will_continue]
You currently have {var_num_workers} worker(s) on the project. 

[if var_workers_update_days > 0 && var_next_num_workers != var_num_workers]
The number of workers will change to {var_next_num_workers} in {var_workers_update_days} day(s).
[continue]

[if tmp_will_continue]

[JavaScript]
write("Room(s) completed today: " + (Math.floor(var_work_complete) - Math.floor(tmp_yesterdays_work_complete)))
[continue]

[if tmp_will_continue]

> [[Start Next Day->execution_scene_test_event_{tmp_event}]]
> [[Change the number of workers->execution_scene_change_workers]]
> [[Ask for more time->execution_scene_ask_time]]
> [[Ask for more cost->execution_scene_ask_cost]]

<!-- 
*******************************
Closure Phase
*******************************
-->

::closure_scene
ui_phase: 'Closure'
ui_room:  'Project Report'

tmp_profit:      var_current_budget - var_running_cost
tmp_loss:        var_running_cost - var_current_budget
tmp_overbudget:  tmp_profit < 0
tmp_underbudget: tmp_profit > 0
tmp_onbudget:    tmp_profit == 0 
tmp_score:       0
tmp_score (var_cust_happy == 100): tmp_score + 1
tmp_score (var_cust_happy > 90):   tmp_score + 1
tmp_score (var_cust_happy > 80):   tmp_score + 1
tmp_score (tmp_profit):            tmp_score + 1
tmp_score (tmp_underbudget):       tmp_score + 1 
--

# Score = {tmp_score} out of 5

Client Happiness: {var_cust_happy}%

[JavaScript]
write("Proportion of the rooms completed: " + Math.floor(var_work_complete) + " out of " + var_current_scope)
[continue]

The project cost: £{var_running_cost}

if [tmp_underbudget]

The project was £{tmp_profit} under budget

if [tmp_overbudget]

The project was £{tmp_loss} over budget

if [tmp_onbudget]

The project was exactly on budget.